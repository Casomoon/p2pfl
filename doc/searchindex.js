Search.setIndex({"docnames": ["contributing", "documentation", "index", "installation", "library_design", "p2pfl", "p2pfl.learning", "p2pfl.learning.aggregators", "p2pfl.learning.pytorch", "p2pfl.learning.pytorch.mnist_examples", "p2pfl.learning.pytorch.mnist_examples.models", "quickstart"], "filenames": ["contributing.md", "documentation.rst", "index.md", "installation.md", "library_design.md", "p2pfl.rst", "p2pfl.learning.rst", "p2pfl.learning.aggregators.rst", "p2pfl.learning.pytorch.rst", "p2pfl.learning.pytorch.mnist_examples.rst", "p2pfl.learning.pytorch.mnist_examples.models.rst", "quickstart.md"], "titles": ["\ud83d\udc6b Contributing", "\ud83d\udcda Documentation", "P2P Federated Learning", "\ud83d\udce5 Installation", "\ud83c\udfdb\ufe0f Library Design", "p2pfl package", "p2pfl.learning package", "p2pfl.learning.aggregators package", "p2pfl.learning.pytorch package", "p2pfl.learning.pytorch.mnist_examples package", "p2pfl.learning.pytorch.mnist_examples.models package", "\ud83c\udfac Quickstart"], "terms": {"If": [0, 5, 6, 7, 8], "you": [0, 3], "find": 0, "pleas": 0, "open": [0, 2], "an": [0, 4, 5, 6, 7, 8, 11], "issu": [0, 3], "tracker": 0, "includ": [0, 4, 6], "much": 0, "inform": [0, 2, 11], "possibl": 0, "version": [0, 6, 8, 11], "p2pfl": [0, 1, 2, 3, 11], "ar": [0, 4, 5, 6, 8], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11], "oper": [0, 4], "system": [0, 2, 5, 11], "ani": [0, 8, 11], "relev": 0, "stack": 0, "trace": 0, "error": 0, "messag": [0, 1, 2, 4], "have": [0, 3, 5], "idea": 0, "new": [0, 7, 8], "featur": 0, "clear": [0, 6, 7], "descript": 0, "titl": 0, "problem": [0, 9], "re": 0, "try": 0, "solv": [0, 10], "d": 0, "like": 0, "see": [0, 2, 11], "pull": 0, "request": [0, 5], "For": [0, 2, 11], "more": [0, 2, 8, 11], "creat": [0, 5, 8], "github": [0, 3], "help": 0, "document": [0, 2, 4, 5, 11], "black": 0, "format": [0, 8], "run": [0, 3, 5, 7], "your": 0, "befor": [0, 5], "submit": 0, "detail": 0, "about": [0, 2], "design": [0, 2], "pattern": [0, 4], "By": 0, "agre": 0, "under": 0, "its": [0, 4], "gnu": 0, "gener": [0, 2, 9], "public": 0, "3": [0, 3, 5, 11], "0": [0, 5, 9, 10, 11], "ha": [0, 4], "adopt": 0, "coven": 0, "all": [0, 4, 5], "commun": [0, 4, 5], "member": 0, "expect": 0, "adher": 0, "code_of_conduct": 0, "md": 0, "packag": [1, 2], "subpackag": [1, 2], "learn": [1, 4, 5, 11], "submodul": [1, 2], "except": [1, 5, 7], "modul": [1, 2], "learner": [1, 5, 8], "content": [1, 2], "base_nod": [1, 2], "basenod": [1, 2, 4, 5], "addr": [1, 5], "add_message_handl": [1, 5], "add_model": [1, 5, 6, 7], "assert_run": [1, 5], "connect": [1, 5, 11], "disconnect": [1, 5], "disconnect_from": [1, 5], "get_neighbor": [1, 5], "handshak": [1, 5], "send_messag": [1, 4, 5], "start": [1, 5, 7, 11], "stop": [1, 5, 11], "learningnodemessag": [1, 2, 5], "metric": [1, 5, 6, 8, 10], "models_aggreg": [1, 5], "models_readi": [1, 5], "model_initi": [1, 5], "start_learn": [1, 5], "stop_learn": [1, 5], "vote_train_set": [1, 5], "nodemessag": [1, 2, 5], "beat": [1, 5], "neighbor": [1, 2, 4], "add": [1, 5, 7], "add_processed_msg": [1, 5], "broadcast_msg": [1, 5], "build_msg": [1, 5], "clear_nei": [1, 5], "get": [1, 5, 6, 7, 8], "get_al": [1, 5], "gossip": [1, 5], "heartbeat": [1, 5], "remov": [1, 5, 7], "send_model": [1, 5], "node": [1, 2, 4, 6, 7, 8, 11], "round": [1, 5, 6, 8, 11], "totalround": [1, 5], "aggreg": [1, 4, 5, 6], "get_agregated_model": [1, 5, 6, 7], "set_data": [1, 5, 6, 8], "set_model": [1, 5, 6, 8], "set_start_learn": [1, 5, 11], "set_stop_learn": [1, 5], "set": [1, 2, 6, 7, 8, 9], "aggregation_timeout": [1, 5], "amount_last_messages_sav": [1, 5], "gossip_exit_on_x_equal_round": [1, 5], "gossip_messages_per_period": [1, 5], "gossip_models_period": [1, 5], "gossip_models_per_round": [1, 5], "gossip_period": [1, 5], "grpc_timeout": [1, 5], "heartbeat_period": [1, 5], "heartbeat_timeout": [1, 5], "log_level": [1, 5], "train_set_s": [1, 5], "ttl": [1, 5], "vote_timeout": [1, 5], "wait_heartbeats_converg": [1, 5], "i": [2, 4, 5, 6, 7, 8, 11], "purpos": 2, "sourc": [2, 3, 5, 6, 7, 8, 9, 10], "librari": [2, 3, 11], "execut": [2, 11], "simul": [2, 5], "real": 2, "environ": [2, 3, 11], "decentr": 2, "specif": [2, 8], "make": 2, "network": [2, 5, 10], "gossisp": 2, "protocol": [2, 5], "instruct": 2, "how": [2, 11], "quick": 2, "introduct": 2, "also": [2, 5, 6, 8], "user": 2, "develop": [2, 4], "pytorch": [2, 3, 5, 6], "other": [2, 5, 6, 8], "exampl": [2, 3], "tensorflow": 2, "report": 2, "bug": 2, "suggest": 2, "enhanc": 2, "code": 2, "style": 2, "licens": 2, "conduct": 2, "principl": 2, "overview": 2, "note": [3, 4], "we": [3, 11], "recommend": 3, "python": 3, "9": 3, "lower": 3, "found": [3, 11], "some": [3, 4], "compat": [3, 5, 6, 8], "10": [3, 5, 10], "To": 3, "can": [3, 5, 6, 8, 11], "simpli": 3, "pip": 3, "Or": 3, "from": [3, 5, 7, 11], "git": 3, "clone": 3, "http": [3, 7], "com": 3, "pguija": 3, "cd": 3, "e": [3, 8], "virtual": 3, "pipenv": 3, "requir": 3, "txt": 3, "thi": [4, 5, 11], "describ": 4, "first": [4, 5, 7, 11], "import": [4, 11], "keep": 4, "mind": 4, "were": [4, 7], "follow": [4, 5], "dure": [4, 6], "them": 4, "solid": 4, "kiss": 4, "dry": 4, "yagni": 4, "etc": 4, "The": [4, 5, 6, 7, 8, 9, 11], "been": [4, 5], "structur": 4, "2": [4, 5, 11], "implement": [4, 6, 11], "one": [4, 11], "allow": [4, 5], "p2p": [4, 5, 11], "grpc": [4, 5], "next": 4, "extend": 4, "sinc": 4, "architectur": 4, "servic": [4, 5], "provid": [4, 5, 6, 8], "well": 4, "consum": 4, "class": [4, 5, 6, 7, 8, 9, 10], "As": 4, "modular": 4, "relat": 4, "feder": [4, 5, 7, 8, 11], "depend": [4, 8], "nodelearn": [4, 5, 6, 8], "compon": 4, "These": 4, "thank": 4, "templat": [4, 6], "strategi": 4, "easi": [4, 11], "extens": 4, "agnost": 4, "charact": 4, "algorithm": 4, "remot": 4, "call": [4, 5], "pass": 4, "model": [4, 5, 6, 7, 8, 9, 11], "exchang": [4, 5], "similar": 4, "approach": 4, "command": [4, 5], "callback": [4, 5], "fedavg": [5, 6], "lightninglearn": [5, 6], "logger": [5, 6], "decodingparamserror": [5, 6, 8], "modelnotmatchingerror": [5, 6, 8], "check_paramet": [5, 6, 8], "decode_paramet": [5, 6, 8], "encode_paramet": [5, 6, 8], "evalu": [5, 6, 8], "finalize_round": [5, 6, 8], "fit": [5, 6, 8], "get_num_sampl": [5, 6, 8], "get_paramet": [5, 6, 8], "interrupt_fit": [5, 6, 8], "log_validation_metr": [5, 6, 8], "set_epoch": [5, 6, 8], "set_paramet": [5, 6, 8], "host": 5, "127": [5, 11], "1": [5, 9, 10, 11], "port": [5, 11], "none": [5, 6, 8, 9, 10, 11], "fals": 5, "base": [5, 6, 7, 8, 9, 10], "nodeservicesservic": 5, "repres": 5, "without": 5, "fl": 5, "paramet": [5, 6, 7, 8, 9], "str": [5, 7, 8], "int": [5, 7, 8, 11], "bool": [5, 10], "encrypt": 5, "address": 5, "type": [5, 8], "cmd": 5, "function": 5, "_": 5, "miss": 5, "associ": 5, "comment": 5, "proto": 5, "file": 5, "assert": 5, "true": [5, 6, 8, 9, 11], "must": 5, "otherwis": 5, "rais": [5, 6, 7, 8], "anoth": 5, "return": [5, 6, 7, 8], "wa": 5, "It": [5, 6, 7, 8], "when": [5, 6], "only_direct": 5, "onli": [5, 7, 11], "direct": 5, "list": [5, 7, 8], "send": 5, "wait": [5, 7, 11], "server": 5, "until": 5, "termin": 5, "alreadi": 5, "contain": [5, 8], "between": 5, "object": [5, 6, 7], "self_addr": [5, 8], "manag": [5, 7], "check": [5, 6, 8], "duplic": 5, "period": 5, "time": [5, 11], "resend": 5, "non": [5, 6, 8], "itself": 5, "handshake_msg": 5, "non_direct": 5, "ad": [5, 7], "avail": 5, "bidirect": 5, "msg": 5, "process": [5, 6, 7, 8], "node_pb2": 5, "node_list": 5, "broadcast": 5, "arg": [5, 8], "build": 5, "string": [5, 7], "argument": [5, 8], "nei": 5, "stub": 5, "node_pb2_grpc": 5, "nodeservicesstub": 5, "name": [5, 6, 7, 8], "pend": 5, "updat": [5, 8], "last": 5, "float": 5, "disconnect_msg": 5, "serialized_model": 5, "contributor": [5, 6, 7, 8], "weight": [5, 6, 7, 8], "byte": 5, "serial": 5, "thread": 5, "close": 5, "data": [5, 6, 8, 9], "care": [5, 7], "should": 5, "dataset": [5, 11], "where": 5, "listen": 5, "default": 5, "mode": 5, "total": 5, "number": [5, 6, 7, 8, 9], "want": 5, "success": [5, 8], "given": 5, "actual": [5, 6, 7, 8], "epoch": [5, 6, 8, 11], "entir": 5, "local": [5, 8], "interrupt": [5, 6, 8], "defin": 5, "constant": 5, "global": [5, 8], "20": [5, 7], "timeout": [5, 7], "second": [5, 7], "100": 5, "save": [5, 6, 8], "avoid": 5, "multipl": 5, "amount": 5, "equal": 5, "exit": [5, 11], "low": 5, "valu": [5, 8], "caus": 5, "earli": 5, "each": 5, "maximum": 5, "5": 5, "consid": 5, "dead": 5, "debug": 5, "log": [5, 6, 8], "level": 5, "4": [5, 9, 11], "size": [5, 9], "train": [5, 6, 8, 9, 10, 11], "live": 5, "60": 5, "vote": 5, "converg": 5, "get_partial_aggreg": [6, 7], "set_nodes_to_aggreg": [6, 7], "set_waiting_aggregated_model": [6, 7], "wait_and_get_aggreg": [6, 7], "mnist_exampl": [6, 8, 11], "mnistfederated_dm": [6, 8, 11], "create_new_exp": [6, 8], "get_log": [6, 8], "federatedlogg": [6, 8], "self_nam": [6, 8], "exp_dict": [6, 8], "actual_exp": [6, 8], "local_step": [6, 8], "global_step": [6, 8], "final": [6, 8], "log_hyperparam": [6, 8], "log_metr": [6, 8], "log_round_metr": [6, 8], "decod": [6, 8], "fail": [6, 8], "do": [6, 8], "match": [6, 8], "monitor": 6, "param": [6, 8], "binari": [6, 8], "encod": [6, 8], "self": [6, 8], "determin": [6, 8], "end": [6, 8], "sampl": [6, 7], "loss": [6, 8], "valid": [6, 8, 9], "wheight": [6, 8], "node_nam": [7, 8], "unknown": 7, "method": 7, "colabor": 7, "trainset": 7, "releas": 7, "lock": 7, "except_nod": 7, "obtain": [7, 8], "partial": 7, "exclud": 7, "l": 7, "Be": 7, "lost": 7, "empti": 7, "indic": 7, "won": 7, "t": 7, "particip": 7, "receiv": 7, "finish": [7, 8], "sever": 7, "kwarg": [7, 8], "averag": 7, "mcmahan": 7, "et": 7, "al": 7, "2016": 7, "paper": 7, "arxiv": 7, "org": 7, "ab": 7, "1602": 7, "05629": 7, "ponder": 7, "dictionari": 7, "num_sampl": 7, "cnn": [8, 9], "mlp": [8, 9, 11], "mnistfederateddm": [8, 9, 11], "mnist_train": [8, 9], "mnist_val": [8, 9], "test_dataload": [8, 9], "train_dataload": [8, 9], "val_dataload": [8, 9], "lightn": [8, 10], "atribut": 8, "log_nam": 8, "exp": 8, "todo": 8, "IT": 8, "TO": 8, "A": 8, "accur": 8, "agg": 8, "lightningloggerbas": 8, "experi": [8, 11], "step": 8, "statu": 8, "necessari": 8, "g": 8, "abort": 8, "record": 8, "hyperparamet": 8, "namespac": 8, "option": 8, "posit": 8, "being": 8, "keyword": 8, "properti": 8, "configure_optim": [9, 10], "forward": [9, 10], "test_step": [9, 10], "training_step": [9, 10], "validation_step": [9, 10], "sub_id": [9, 11], "number_sub": [9, 11], "batch_siz": 9, "32": 9, "num_work": 9, "val_perc": 9, "iid": 9, "lightningdatamodul": 9, "partit": 9, "mnist": [9, 10, 11], "Its": 9, "distribucion": 9, "over": 9, "mni": 9, "toi": 9, "subset": 9, "id": 9, "batch": [9, 10], "worker": 9, "percentag": 9, "in_channel": 10, "out_channel": 10, "accuraci": 10, "lr_rate": 10, "001": 10, "seed": 10, "lightningmodul": 10, "convolut": 10, "neural": 10, "x": 10, "batch_idx": 10, "batch_id": 10, "torchmetr": 10, "classif": 10, "multilay": [10, 11], "perceptron": [10, 11], "focus": 11, "creation": 11, "In": 11, "tutori": 11, "adapt": 11, "two": 11, "node1": 11, "py": 11, "configur": 11, "just": 11, "coupl": 11, "line": 11, "sy": 11, "__name__": 11, "__main__": 11, "len": 11, "argv": 11, "print": 11, "usag": 11, "python3": 11, "nodo1": 11, "self_port": 11, "input": 11, "press": 11, "kei": 11, "n": 11, "node2": 11, "need": 11, "few": 11, "nodo2": 11, "other_node_port": 11, "f": 11, "sleep": 11, "result": 11, "while": 11, "break": 11, "now": 11, "after": 11, "here": 11, "yet": 11}, "objects": {"": [[5, 0, 0, "-", "p2pfl"]], "p2pfl": [[5, 0, 0, "-", "base_node"], [6, 0, 0, "-", "learning"], [5, 0, 0, "-", "messages"], [5, 0, 0, "-", "neighbors"], [5, 0, 0, "-", "node"], [5, 0, 0, "-", "settings"]], "p2pfl.base_node": [[5, 1, 1, "", "BaseNode"]], "p2pfl.base_node.BaseNode": [[5, 2, 1, "", "add_message_handler"], [5, 2, 1, "", "add_model"], [5, 3, 1, "", "addr"], [5, 2, 1, "", "assert_running"], [5, 2, 1, "", "connect"], [5, 2, 1, "", "disconnect"], [5, 2, 1, "", "disconnect_from"], [5, 2, 1, "", "get_neighbors"], [5, 2, 1, "", "handshake"], [5, 2, 1, "", "send_message"], [5, 2, 1, "", "start"], [5, 2, 1, "", "stop"]], "p2pfl.learning": [[7, 0, 0, "-", "aggregators"], [6, 0, 0, "-", "exceptions"], [6, 0, 0, "-", "learner"], [8, 0, 0, "-", "pytorch"]], "p2pfl.learning.aggregators": [[7, 0, 0, "-", "aggregator"], [7, 0, 0, "-", "fedavg"]], "p2pfl.learning.aggregators.aggregator": [[7, 1, 1, "", "Aggregator"]], "p2pfl.learning.aggregators.aggregator.Aggregator": [[7, 2, 1, "", "add_model"], [7, 2, 1, "", "aggregate"], [7, 2, 1, "", "clear"], [7, 2, 1, "", "get_agregated_models"], [7, 2, 1, "", "get_partial_aggregation"], [7, 2, 1, "", "set_nodes_to_aggregate"], [7, 2, 1, "", "set_waiting_aggregated_model"], [7, 2, 1, "", "wait_and_get_aggregation"]], "p2pfl.learning.aggregators.fedavg": [[7, 1, 1, "", "FedAvg"]], "p2pfl.learning.aggregators.fedavg.FedAvg": [[7, 2, 1, "", "aggregate"]], "p2pfl.learning.exceptions": [[6, 4, 1, "", "DecodingParamsError"], [6, 4, 1, "", "ModelNotMatchingError"]], "p2pfl.learning.learner": [[6, 1, 1, "", "NodeLearner"]], "p2pfl.learning.learner.NodeLearner": [[6, 2, 1, "", "check_parameters"], [6, 2, 1, "", "decode_parameters"], [6, 2, 1, "", "encode_parameters"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "finalize_round"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "get_num_samples"], [6, 2, 1, "", "get_parameters"], [6, 2, 1, "", "interrupt_fit"], [6, 2, 1, "", "log_validation_metrics"], [6, 2, 1, "", "set_data"], [6, 2, 1, "", "set_epochs"], [6, 2, 1, "", "set_model"], [6, 2, 1, "", "set_parameters"]], "p2pfl.learning.pytorch": [[8, 0, 0, "-", "lightninglearner"], [8, 0, 0, "-", "logger"], [9, 0, 0, "-", "mnist_examples"]], "p2pfl.learning.pytorch.lightninglearner": [[8, 1, 1, "", "LightningLearner"]], "p2pfl.learning.pytorch.lightninglearner.LightningLearner": [[8, 2, 1, "", "check_parameters"], [8, 2, 1, "", "create_new_exp"], [8, 2, 1, "", "decode_parameters"], [8, 2, 1, "", "encode_parameters"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "finalize_round"], [8, 2, 1, "", "fit"], [8, 2, 1, "", "get_logs"], [8, 2, 1, "", "get_num_samples"], [8, 2, 1, "", "get_parameters"], [8, 2, 1, "", "interrupt_fit"], [8, 2, 1, "", "log_validation_metrics"], [8, 2, 1, "", "set_data"], [8, 2, 1, "", "set_epochs"], [8, 2, 1, "", "set_model"], [8, 2, 1, "", "set_parameters"]], "p2pfl.learning.pytorch.logger": [[8, 1, 1, "", "FederatedLogger"]], "p2pfl.learning.pytorch.logger.FederatedLogger": [[8, 3, 1, "", "actual_exp"], [8, 2, 1, "", "create_new_exp"], [8, 3, 1, "", "exp_dicts"], [8, 2, 1, "", "finalize"], [8, 2, 1, "", "finalize_round"], [8, 2, 1, "", "get_logs"], [8, 3, 1, "", "global_step"], [8, 3, 1, "", "local_step"], [8, 2, 1, "", "log_hyperparams"], [8, 2, 1, "", "log_metrics"], [8, 2, 1, "", "log_round_metric"], [8, 5, 1, "", "name"], [8, 3, 1, "", "round"], [8, 2, 1, "", "save"], [8, 3, 1, "", "self_name"], [8, 5, 1, "", "version"]], "p2pfl.learning.pytorch.mnist_examples": [[9, 0, 0, "-", "mnistfederated_dm"], [10, 0, 0, "-", "models"]], "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm": [[9, 1, 1, "", "MnistFederatedDM"]], "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM": [[9, 3, 1, "", "mnist_train"], [9, 3, 1, "", "mnist_val"], [9, 2, 1, "", "test_dataloader"], [9, 2, 1, "", "train_dataloader"], [9, 2, 1, "", "val_dataloader"]], "p2pfl.learning.pytorch.mnist_examples.models": [[10, 0, 0, "-", "cnn"], [10, 0, 0, "-", "mlp"]], "p2pfl.learning.pytorch.mnist_examples.models.cnn": [[10, 1, 1, "", "CNN"]], "p2pfl.learning.pytorch.mnist_examples.models.cnn.CNN": [[10, 2, 1, "", "configure_optimizers"], [10, 2, 1, "", "forward"], [10, 2, 1, "", "test_step"], [10, 3, 1, "", "training"], [10, 2, 1, "", "training_step"], [10, 2, 1, "", "validation_step"]], "p2pfl.learning.pytorch.mnist_examples.models.mlp": [[10, 1, 1, "", "MLP"]], "p2pfl.learning.pytorch.mnist_examples.models.mlp.MLP": [[10, 2, 1, "", "configure_optimizers"], [10, 2, 1, "", "forward"], [10, 2, 1, "", "test_step"], [10, 3, 1, "", "training"], [10, 2, 1, "", "training_step"], [10, 2, 1, "", "validation_step"]], "p2pfl.messages": [[5, 1, 1, "", "LearningNodeMessages"], [5, 1, 1, "", "NodeMessages"]], "p2pfl.messages.LearningNodeMessages": [[5, 3, 1, "", "METRICS"], [5, 3, 1, "", "MODELS_AGGREGATED"], [5, 3, 1, "", "MODELS_READY"], [5, 3, 1, "", "MODEL_INITIALIZED"], [5, 3, 1, "", "START_LEARNING"], [5, 3, 1, "", "STOP_LEARNING"], [5, 3, 1, "", "VOTE_TRAIN_SET"]], "p2pfl.messages.NodeMessages": [[5, 3, 1, "", "BEAT"]], "p2pfl.neighbors": [[5, 1, 1, "", "Neighbors"]], "p2pfl.neighbors.Neighbors": [[5, 2, 1, "", "add"], [5, 2, 1, "", "add_processed_msg"], [5, 2, 1, "", "broadcast_msg"], [5, 2, 1, "", "build_msg"], [5, 2, 1, "", "clear_neis"], [5, 2, 1, "", "get"], [5, 2, 1, "", "get_all"], [5, 2, 1, "", "gossip"], [5, 2, 1, "", "heartbeat"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "send_message"], [5, 2, 1, "", "send_model"], [5, 2, 1, "", "start"], [5, 2, 1, "", "stop"]], "p2pfl.node": [[5, 1, 1, "", "Node"]], "p2pfl.node.Node": [[5, 2, 1, "", "add_model"], [5, 3, 1, "", "aggregator"], [5, 2, 1, "", "connect"], [5, 2, 1, "", "get_agregated_models"], [5, 2, 1, "", "handshake"], [5, 3, 1, "", "learner"], [5, 3, 1, "", "round"], [5, 2, 1, "", "set_data"], [5, 2, 1, "", "set_model"], [5, 2, 1, "", "set_start_learning"], [5, 2, 1, "", "set_stop_learning"], [5, 2, 1, "", "stop"], [5, 3, 1, "", "totalrounds"]], "p2pfl.settings": [[5, 1, 1, "", "Settings"]], "p2pfl.settings.Settings": [[5, 3, 1, "", "AGGREGATION_TIMEOUT"], [5, 3, 1, "", "AMOUNT_LAST_MESSAGES_SAVED"], [5, 3, 1, "", "GOSSIP_EXIT_ON_X_EQUAL_ROUNDS"], [5, 3, 1, "", "GOSSIP_MESSAGES_PER_PERIOD"], [5, 3, 1, "", "GOSSIP_MODELS_PERIOD"], [5, 3, 1, "", "GOSSIP_MODELS_PER_ROUND"], [5, 3, 1, "", "GOSSIP_PERIOD"], [5, 3, 1, "", "GRPC_TIMEOUT"], [5, 3, 1, "", "HEARTBEAT_PERIOD"], [5, 3, 1, "", "HEARTBEAT_TIMEOUT"], [5, 3, 1, "", "LOG_LEVEL"], [5, 3, 1, "", "TRAIN_SET_SIZE"], [5, 3, 1, "", "TTL"], [5, 3, 1, "", "VOTE_TIMEOUT"], [5, 3, 1, "", "WAIT_HEARTBEATS_CONVERGENCE"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "property", "Python property"]}, "titleterms": {"contribut": [0, 2], "how": 0, "report": 0, "bug": 0, "suggest": 0, "enhanc": 0, "code": 0, "style": 0, "licens": 0, "conduct": 0, "document": 1, "p2p": 2, "feder": 2, "learn": [2, 6, 7, 8, 9, 10], "instal": [2, 3], "quickstart": [2, 11], "index": 2, "For": 3, "user": 3, "develop": 3, "librari": 4, "design": 4, "principl": 4, "gener": 4, "overview": 4, "p2pfl": [5, 6, 7, 8, 9, 10], "packag": [5, 6, 7, 8, 9, 10], "subpackag": [5, 6, 8, 9], "submodul": [5, 6, 7, 8, 9, 10], "base_nod": 5, "modul": [5, 6, 7, 8, 9, 10], "messag": 5, "neighbor": 5, "node": 5, "set": 5, "content": [5, 6, 7, 8, 9, 10], "except": 6, "learner": 6, "aggreg": 7, "fedavg": 7, "pytorch": [8, 9, 10, 11], "lightninglearn": 8, "logger": 8, "mnist_exampl": [9, 10], "mnistfederated_dm": 9, "model": 10, "cnn": 10, "mlp": 10, "other": 11, "exampl": 11, "tensorflow": 11}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"\ud83d\udc6b Contributing": [[0, "contributing"], [2, "contributing"]], "How to contribute": [[0, "how-to-contribute"]], "Reporting bugs": [[0, "reporting-bugs"]], "Suggesting enhancements": [[0, "suggesting-enhancements"]], "Contributing code": [[0, "contributing-code"]], "Code style": [[0, "code-style"]], "License": [[0, "license"]], "Code of Conduct": [[0, "code-of-conduct"]], "\ud83d\udcda Documentation": [[1, "documentation"]], "P2P Federated Learning": [[2, "p2p-federated-learning"]], "\ud83d\udce5 Installation": [[2, "installation"], [3, "installation"]], "\ud83c\udfac Quickstart": [[2, "quickstart"], [11, "quickstart"]], "\ud83d\udccb Index": [[2, "index"]], "For users": [[3, "for-users"]], "For developers": [[3, "for-developers"]], "\ud83c\udfdb\ufe0f Library Design": [[4, "library-design"]], "Design Principles": [[4, "design-principles"]], "General Overview": [[4, "general-overview"]], "p2pfl package": [[5, "p2pfl-package"]], "Subpackages": [[5, "subpackages"], [6, "subpackages"], [8, "subpackages"], [9, "subpackages"]], "Submodules": [[5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "p2pfl.base_node module": [[5, "module-p2pfl.base_node"]], "p2pfl.messages module": [[5, "module-p2pfl.messages"]], "p2pfl.neighbors module": [[5, "module-p2pfl.neighbors"]], "p2pfl.node module": [[5, "module-p2pfl.node"]], "p2pfl.settings module": [[5, "module-p2pfl.settings"]], "Module contents": [[5, "module-p2pfl"], [6, "module-p2pfl.learning"], [7, "module-p2pfl.learning.aggregators"], [8, "module-p2pfl.learning.pytorch"], [9, "module-p2pfl.learning.pytorch.mnist_examples"], [10, "module-p2pfl.learning.pytorch.mnist_examples.models"]], "p2pfl.learning package": [[6, "p2pfl-learning-package"]], "p2pfl.learning.exceptions module": [[6, "module-p2pfl.learning.exceptions"]], "p2pfl.learning.learner module": [[6, "module-p2pfl.learning.learner"]], "p2pfl.learning.aggregators package": [[7, "p2pfl-learning-aggregators-package"]], "p2pfl.learning.aggregators.aggregator module": [[7, "module-p2pfl.learning.aggregators.aggregator"]], "p2pfl.learning.aggregators.fedavg module": [[7, "module-p2pfl.learning.aggregators.fedavg"]], "p2pfl.learning.pytorch package": [[8, "p2pfl-learning-pytorch-package"]], "p2pfl.learning.pytorch.lightninglearner module": [[8, "module-p2pfl.learning.pytorch.lightninglearner"]], "p2pfl.learning.pytorch.logger module": [[8, "module-p2pfl.learning.pytorch.logger"]], "p2pfl.learning.pytorch.mnist_examples package": [[9, "p2pfl-learning-pytorch-mnist-examples-package"]], "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm module": [[9, "module-p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm"]], "p2pfl.learning.pytorch.mnist_examples.models package": [[10, "p2pfl-learning-pytorch-mnist-examples-models-package"]], "p2pfl.learning.pytorch.mnist_examples.models.cnn module": [[10, "module-p2pfl.learning.pytorch.mnist_examples.models.cnn"]], "p2pfl.learning.pytorch.mnist_examples.models.mlp module": [[10, "module-p2pfl.learning.pytorch.mnist_examples.models.mlp"]], "PyTorch Quickstart": [[11, "pytorch-quickstart"]], "Other examples": [[11, "other-examples"]], "TensorFlow Quickstart": [[11, "tensorflow-quickstart"]]}, "indexentries": {"aggregation_timeout (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.AGGREGATION_TIMEOUT"]], "amount_last_messages_saved (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.AMOUNT_LAST_MESSAGES_SAVED"]], "beat (p2pfl.messages.nodemessages attribute)": [[5, "p2pfl.messages.NodeMessages.BEAT"]], "basenode (class in p2pfl.base_node)": [[5, "p2pfl.base_node.BaseNode"]], "gossip_exit_on_x_equal_rounds (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.GOSSIP_EXIT_ON_X_EQUAL_ROUNDS"]], "gossip_messages_per_period (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.GOSSIP_MESSAGES_PER_PERIOD"]], "gossip_models_period (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.GOSSIP_MODELS_PERIOD"]], "gossip_models_per_round (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.GOSSIP_MODELS_PER_ROUND"]], "gossip_period (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.GOSSIP_PERIOD"]], "grpc_timeout (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.GRPC_TIMEOUT"]], "heartbeat_period (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.HEARTBEAT_PERIOD"]], "heartbeat_timeout (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.HEARTBEAT_TIMEOUT"]], "log_level (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.LOG_LEVEL"]], "learningnodemessages (class in p2pfl.messages)": [[5, "p2pfl.messages.LearningNodeMessages"]], "metrics (p2pfl.messages.learningnodemessages attribute)": [[5, "p2pfl.messages.LearningNodeMessages.METRICS"]], "models_aggregated (p2pfl.messages.learningnodemessages attribute)": [[5, "p2pfl.messages.LearningNodeMessages.MODELS_AGGREGATED"]], "models_ready (p2pfl.messages.learningnodemessages attribute)": [[5, "p2pfl.messages.LearningNodeMessages.MODELS_READY"]], "model_initialized (p2pfl.messages.learningnodemessages attribute)": [[5, "p2pfl.messages.LearningNodeMessages.MODEL_INITIALIZED"]], "neighbors (class in p2pfl.neighbors)": [[5, "p2pfl.neighbors.Neighbors"]], "node (class in p2pfl.node)": [[5, "p2pfl.node.Node"]], "nodemessages (class in p2pfl.messages)": [[5, "p2pfl.messages.NodeMessages"]], "start_learning (p2pfl.messages.learningnodemessages attribute)": [[5, "p2pfl.messages.LearningNodeMessages.START_LEARNING"]], "stop_learning (p2pfl.messages.learningnodemessages attribute)": [[5, "p2pfl.messages.LearningNodeMessages.STOP_LEARNING"]], "settings (class in p2pfl.settings)": [[5, "p2pfl.settings.Settings"]], "train_set_size (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.TRAIN_SET_SIZE"]], "ttl (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.TTL"]], "vote_timeout (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.VOTE_TIMEOUT"]], "vote_train_set (p2pfl.messages.learningnodemessages attribute)": [[5, "p2pfl.messages.LearningNodeMessages.VOTE_TRAIN_SET"]], "wait_heartbeats_convergence (p2pfl.settings.settings attribute)": [[5, "p2pfl.settings.Settings.WAIT_HEARTBEATS_CONVERGENCE"]], "add() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.add"]], "add_message_handler() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.add_message_handler"]], "add_model() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.add_model"]], "add_model() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.add_model"]], "add_processed_msg() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.add_processed_msg"]], "addr (p2pfl.base_node.basenode attribute)": [[5, "p2pfl.base_node.BaseNode.addr"]], "aggregator (p2pfl.node.node attribute)": [[5, "p2pfl.node.Node.aggregator"]], "assert_running() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.assert_running"]], "broadcast_msg() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.broadcast_msg"]], "build_msg() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.build_msg"]], "clear_neis() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.clear_neis"]], "connect() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.connect"]], "connect() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.connect"]], "disconnect() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.disconnect"]], "disconnect_from() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.disconnect_from"]], "get() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.get"]], "get_agregated_models() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.get_agregated_models"]], "get_all() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.get_all"]], "get_neighbors() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.get_neighbors"]], "gossip() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.gossip"]], "handshake() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.handshake"]], "handshake() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.handshake"]], "heartbeat() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.heartbeat"]], "learner (p2pfl.node.node attribute)": [[5, "p2pfl.node.Node.learner"]], "module": [[5, "module-p2pfl"], [5, "module-p2pfl.base_node"], [5, "module-p2pfl.messages"], [5, "module-p2pfl.neighbors"], [5, "module-p2pfl.node"], [5, "module-p2pfl.settings"], [6, "module-p2pfl.learning"], [6, "module-p2pfl.learning.exceptions"], [6, "module-p2pfl.learning.learner"], [7, "module-p2pfl.learning.aggregators"], [7, "module-p2pfl.learning.aggregators.aggregator"], [7, "module-p2pfl.learning.aggregators.fedavg"], [8, "module-p2pfl.learning.pytorch"], [8, "module-p2pfl.learning.pytorch.lightninglearner"], [8, "module-p2pfl.learning.pytorch.logger"], [9, "module-p2pfl.learning.pytorch.mnist_examples"], [9, "module-p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm"], [10, "module-p2pfl.learning.pytorch.mnist_examples.models"], [10, "module-p2pfl.learning.pytorch.mnist_examples.models.cnn"], [10, "module-p2pfl.learning.pytorch.mnist_examples.models.mlp"]], "p2pfl": [[5, "module-p2pfl"]], "p2pfl.base_node": [[5, "module-p2pfl.base_node"]], "p2pfl.messages": [[5, "module-p2pfl.messages"]], "p2pfl.neighbors": [[5, "module-p2pfl.neighbors"]], "p2pfl.node": [[5, "module-p2pfl.node"]], "p2pfl.settings": [[5, "module-p2pfl.settings"]], "remove() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.remove"]], "round (p2pfl.node.node attribute)": [[5, "p2pfl.node.Node.round"]], "send_message() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.send_message"]], "send_message() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.send_message"]], "send_model() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.send_model"]], "set_data() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.set_data"]], "set_model() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.set_model"]], "set_start_learning() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.set_start_learning"]], "set_stop_learning() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.set_stop_learning"]], "start() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.start"]], "start() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.start"]], "stop() (p2pfl.base_node.basenode method)": [[5, "p2pfl.base_node.BaseNode.stop"]], "stop() (p2pfl.neighbors.neighbors method)": [[5, "p2pfl.neighbors.Neighbors.stop"]], "stop() (p2pfl.node.node method)": [[5, "p2pfl.node.Node.stop"]], "totalrounds (p2pfl.node.node attribute)": [[5, "p2pfl.node.Node.totalrounds"]], "decodingparamserror": [[6, "p2pfl.learning.exceptions.DecodingParamsError"]], "modelnotmatchingerror": [[6, "p2pfl.learning.exceptions.ModelNotMatchingError"]], "nodelearner (class in p2pfl.learning.learner)": [[6, "p2pfl.learning.learner.NodeLearner"]], "check_parameters() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.check_parameters"]], "decode_parameters() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.decode_parameters"]], "encode_parameters() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.encode_parameters"]], "evaluate() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.evaluate"]], "finalize_round() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.finalize_round"]], "fit() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.fit"]], "get_num_samples() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.get_num_samples"]], "get_parameters() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.get_parameters"]], "interrupt_fit() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.interrupt_fit"]], "log_validation_metrics() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.log_validation_metrics"]], "p2pfl.learning": [[6, "module-p2pfl.learning"]], "p2pfl.learning.exceptions": [[6, "module-p2pfl.learning.exceptions"]], "p2pfl.learning.learner": [[6, "module-p2pfl.learning.learner"]], "set_data() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.set_data"]], "set_epochs() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.set_epochs"]], "set_model() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.set_model"]], "set_parameters() (p2pfl.learning.learner.nodelearner method)": [[6, "p2pfl.learning.learner.NodeLearner.set_parameters"]], "aggregator (class in p2pfl.learning.aggregators.aggregator)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator"]], "fedavg (class in p2pfl.learning.aggregators.fedavg)": [[7, "p2pfl.learning.aggregators.fedavg.FedAvg"]], "add_model() (p2pfl.learning.aggregators.aggregator.aggregator method)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator.add_model"]], "aggregate() (p2pfl.learning.aggregators.aggregator.aggregator method)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator.aggregate"]], "aggregate() (p2pfl.learning.aggregators.fedavg.fedavg method)": [[7, "p2pfl.learning.aggregators.fedavg.FedAvg.aggregate"]], "clear() (p2pfl.learning.aggregators.aggregator.aggregator method)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator.clear"]], "get_agregated_models() (p2pfl.learning.aggregators.aggregator.aggregator method)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator.get_agregated_models"]], "get_partial_aggregation() (p2pfl.learning.aggregators.aggregator.aggregator method)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator.get_partial_aggregation"]], "p2pfl.learning.aggregators": [[7, "module-p2pfl.learning.aggregators"]], "p2pfl.learning.aggregators.aggregator": [[7, "module-p2pfl.learning.aggregators.aggregator"]], "p2pfl.learning.aggregators.fedavg": [[7, "module-p2pfl.learning.aggregators.fedavg"]], "set_nodes_to_aggregate() (p2pfl.learning.aggregators.aggregator.aggregator method)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator.set_nodes_to_aggregate"]], "set_waiting_aggregated_model() (p2pfl.learning.aggregators.aggregator.aggregator method)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator.set_waiting_aggregated_model"]], "wait_and_get_aggregation() (p2pfl.learning.aggregators.aggregator.aggregator method)": [[7, "p2pfl.learning.aggregators.aggregator.Aggregator.wait_and_get_aggregation"]], "federatedlogger (class in p2pfl.learning.pytorch.logger)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger"]], "lightninglearner (class in p2pfl.learning.pytorch.lightninglearner)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner"]], "actual_exp (p2pfl.learning.pytorch.logger.federatedlogger attribute)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.actual_exp"]], "check_parameters() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.check_parameters"]], "create_new_exp() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.create_new_exp"]], "create_new_exp() (p2pfl.learning.pytorch.logger.federatedlogger method)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.create_new_exp"]], "decode_parameters() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.decode_parameters"]], "encode_parameters() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.encode_parameters"]], "evaluate() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.evaluate"]], "exp_dicts (p2pfl.learning.pytorch.logger.federatedlogger attribute)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.exp_dicts"]], "finalize() (p2pfl.learning.pytorch.logger.federatedlogger method)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.finalize"]], "finalize_round() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.finalize_round"]], "finalize_round() (p2pfl.learning.pytorch.logger.federatedlogger method)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.finalize_round"]], "fit() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.fit"]], "get_logs() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.get_logs"]], "get_logs() (p2pfl.learning.pytorch.logger.federatedlogger method)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.get_logs"]], "get_num_samples() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.get_num_samples"]], "get_parameters() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.get_parameters"]], "global_step (p2pfl.learning.pytorch.logger.federatedlogger attribute)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.global_step"]], "interrupt_fit() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.interrupt_fit"]], "local_step (p2pfl.learning.pytorch.logger.federatedlogger attribute)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.local_step"]], "log_hyperparams() (p2pfl.learning.pytorch.logger.federatedlogger method)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.log_hyperparams"]], "log_metrics() (p2pfl.learning.pytorch.logger.federatedlogger method)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.log_metrics"]], "log_round_metric() (p2pfl.learning.pytorch.logger.federatedlogger method)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.log_round_metric"]], "log_validation_metrics() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.log_validation_metrics"]], "name (p2pfl.learning.pytorch.logger.federatedlogger property)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.name"]], "p2pfl.learning.pytorch": [[8, "module-p2pfl.learning.pytorch"]], "p2pfl.learning.pytorch.lightninglearner": [[8, "module-p2pfl.learning.pytorch.lightninglearner"]], "p2pfl.learning.pytorch.logger": [[8, "module-p2pfl.learning.pytorch.logger"]], "round (p2pfl.learning.pytorch.logger.federatedlogger attribute)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.round"]], "save() (p2pfl.learning.pytorch.logger.federatedlogger method)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.save"]], "self_name (p2pfl.learning.pytorch.logger.federatedlogger attribute)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.self_name"]], "set_data() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.set_data"]], "set_epochs() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.set_epochs"]], "set_model() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.set_model"]], "set_parameters() (p2pfl.learning.pytorch.lightninglearner.lightninglearner method)": [[8, "p2pfl.learning.pytorch.lightninglearner.LightningLearner.set_parameters"]], "version (p2pfl.learning.pytorch.logger.federatedlogger property)": [[8, "p2pfl.learning.pytorch.logger.FederatedLogger.version"]], "mnistfederateddm (class in p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm)": [[9, "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM"]], "mnist_train (p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm attribute)": [[9, "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.mnist_train"]], "mnist_val (p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm attribute)": [[9, "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.mnist_val"]], "p2pfl.learning.pytorch.mnist_examples": [[9, "module-p2pfl.learning.pytorch.mnist_examples"]], "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm": [[9, "module-p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm"]], "test_dataloader() (p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm method)": [[9, "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.test_dataloader"]], "train_dataloader() (p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm method)": [[9, "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.train_dataloader"]], "val_dataloader() (p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm method)": [[9, "p2pfl.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.val_dataloader"]], "cnn (class in p2pfl.learning.pytorch.mnist_examples.models.cnn)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.cnn.CNN"]], "mlp (class in p2pfl.learning.pytorch.mnist_examples.models.mlp)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.mlp.MLP"]], "configure_optimizers() (p2pfl.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.cnn.CNN.configure_optimizers"]], "configure_optimizers() (p2pfl.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.mlp.MLP.configure_optimizers"]], "forward() (p2pfl.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.cnn.CNN.forward"]], "forward() (p2pfl.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.mlp.MLP.forward"]], "p2pfl.learning.pytorch.mnist_examples.models": [[10, "module-p2pfl.learning.pytorch.mnist_examples.models"]], "p2pfl.learning.pytorch.mnist_examples.models.cnn": [[10, "module-p2pfl.learning.pytorch.mnist_examples.models.cnn"]], "p2pfl.learning.pytorch.mnist_examples.models.mlp": [[10, "module-p2pfl.learning.pytorch.mnist_examples.models.mlp"]], "test_step() (p2pfl.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.cnn.CNN.test_step"]], "test_step() (p2pfl.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.mlp.MLP.test_step"]], "training (p2pfl.learning.pytorch.mnist_examples.models.cnn.cnn attribute)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.cnn.CNN.training"]], "training (p2pfl.learning.pytorch.mnist_examples.models.mlp.mlp attribute)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.mlp.MLP.training"]], "training_step() (p2pfl.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.cnn.CNN.training_step"]], "training_step() (p2pfl.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.mlp.MLP.training_step"]], "validation_step() (p2pfl.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.cnn.CNN.validation_step"]], "validation_step() (p2pfl.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[10, "p2pfl.learning.pytorch.mnist_examples.models.mlp.MLP.validation_step"]]}})